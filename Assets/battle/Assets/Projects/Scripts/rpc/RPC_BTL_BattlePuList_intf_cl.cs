/*******************************************************************************
 * @file    RPC_BTL_BattlePuList_intf_cl.cs
 * @brief   Auto generated by mbrpcgen.rb
 *******************************************************************************/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
namespace BTL
{
    /*
     * function ID
     */
    public enum BattlePuList_FuncID
    {
        ID_QUERYCONNECTBATTLEPULIST = 0,
        ID_QUERYCONNECTBATTLEPULISTRESULT = 1,
        ID_QUERYHEALTHCHECKBATTLEPULIST = 2,
        ID_QUERYHEALTHCHECKBATTLEPULISTRESULT = 3,
        ID_GETROOMLIST = 4,
        ID_GETROOMLISTRESULT = 5,
        ID_UPDATEROOMINFO = 6,
        ID_UPDATEROOMINFORESULT = 7,
        ID_DELETEROOMINFO = 8,
        ID_DELETEROOMINFORESULT = 9,
        ID_APPOINTMENTBATTLE = 10,
        ID_APPOINTMENTBATTLERESULT = 11,
        ID_QUERYDISCONNECTBATTLEPULIST = 12,
	    ID_MAX,
    }
	/*
     * max values
     */
    public enum BattlePuListMaxValues
    {
        SEND_UPDATEROOMINFORESULT_ROOM_INFO_LEN_MAX = 100,
        RECV_GETROOMLISTRESULT_ROOM_INFO_LEN_MAX = 100,
    }
	/*
     * RPC Stub Interface
     */
    public interface IBattlePuListClient
    {
        /*
         * Send Funcs
         */
        UInt32 Send_QueryConnectBattlePuList( UInt64 any_key );
        UInt32 Send_QueryConnectBattlePuListResult( Byte num );
        UInt32 Send_QueryHealthCheckBattlePuList(  );
        UInt32 Send_QueryHealthCheckBattlePuListResult(  );
        UInt32 Send_GetRoomList( UInt32 max );
        UInt32 Send_UpdateRoomInfoResult( BattleRoomInfo[] room_info, UInt32 room_info_len );
        UInt32 Send_DeleteRoomInfoResult( UInt64 pu_uid );
        UInt32 Send_AppointmentBattle( UInt64 matching_room_id );
        UInt32 Send_QueryDisconnectBattlePuList(  );
        /*
         * Receive Funcs
         */
        void Recv_QueryConnectBattlePuList( UInt64 addr, UInt64 any_key );
        void Recv_QueryConnectBattlePuListResult( UInt64 addr, Byte num );
        void Recv_QueryHealthCheckBattlePuList( UInt64 addr );
        void Recv_QueryHealthCheckBattlePuListResult( UInt64 addr );
        void Recv_GetRoomListResult( UInt64 addr, BattleRoomInfo[] room_info, UInt32 room_info_len );
        void Recv_UpdateRoomInfo( UInt64 addr );
        void Recv_DeleteRoomInfo( UInt64 addr );
        void Recv_AppointmentBattleResult( UInt64 addr, UInt64 matching_room_id, BattlePuInfo battle_pu_info, UInt64 appointment_battle_pu_time, Int32 result );
        void Recv_QueryDisconnectBattlePuList( UInt64 addr );
    }
}
